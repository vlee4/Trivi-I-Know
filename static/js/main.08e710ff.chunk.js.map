{"version":3,"sources":["Store/questionsReducer.js","Store/gameStatsReducer.js","Components/Start.js","Components/Question.js","Components/Results.js","App.js","Store/index.js","reportWebVitals.js","index.js"],"names":["initialState","QNum","QIdx","CurQ","Questions","GET_QUESTIONS","GENERATE_QUESTION","NEXT_QUESTION","pickQuestions","dispatch","questions","chosen","Set","counter","index","Math","floor","random","QandA","length","has","add","type","formatQuestion","qIdx","question","correct","incorrect","inserts","answers","size","idx","ansArr","forEach","push","generateQuestion","error","console","log","nextQuestion","qNum","getNext","ACTIVATE_GAME","CHANGE_PHASE","CHECK_ANSWER","activateGame","name","startGame","checkAnswer","answer","score","checkSubmission","Start","state","nameInput","disabled","inputVal","React","createRef","toggleButton","bind","btnState","this","current","value","trim","setState","props","fetchQuestions","beginGame","className","htmlFor","placeholder","ref","onChange","onClick","Component","connect","Question","choice","submitted","submitAnswer","nextQ","getQ","e","target","preventDefault","check","nextQuest","curQuestion","gameStats","answerSheet","myAnswer","onSubmit","map","ans","id","checked","num","Results","App","phase","reducer","combineReducers","action","nextIndex","playerName","newName","newSubmission","update","middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","createLogger","collapsed","store","createStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08e710ff.chunk.js","sourcesContent":["import QandA from \"../Apprentice_TandemFor400_Data.json\"\n//Initial State\nconst initialState = {\n  QNum: 0,\n  QIdx: 0,\n  CurQ: {},\n  Questions: [],\n}\n\n//Action\nconst GET_QUESTIONS = \"GET_QUESTIONS\";\nconst GENERATE_QUESTION = \"GENERATE_QUESTION\";\nconst NEXT_QUESTION = \"NEXT_QUESTION\";\n\n\n//ACTION CREATOR\nconst getQuestions = (questions) => {\n  return {\n    type: GET_QUESTIONS,\n    questions\n  }\n}\n\nconst generateQuestion = (question) => {\n  return {\n    type: GENERATE_QUESTION,\n    question\n  }\n}\n\nconst getNext = (qNum) => {\n  return {\n    type: NEXT_QUESTION,\n    qNum\n  }\n}\n\n\nexport const pickQuestions = () => {\n  return (dispatch) => {\n    let chosen = new Set();\n    let counter = 0;\n    while(counter<10){\n      let index = Math.floor(Math.random()*(QandA.length));\n      if(!chosen.has(index)){\n        chosen.add(index);\n        counter++;\n      }\n    }\n    dispatch(getQuestions([...chosen]));\n  }\n}\n//Input will be INDEX in QandA to look for\nexport const formatQuestion = (qIdx) => {\n  return (dispatch) => {\n    try{\n      let {question, correct, incorrect} = QandA[qIdx];\n      let inserts = new Set();\n      let answers = [correct, ...incorrect];\n\n      //Randomize order of possible answers\n      while(inserts.size<answers.length){ //creates order of indexes\n        let idx = Math.floor(Math.random()*(4))\n        inserts.add(idx);\n      }\n      let ansArr = [];\n      inserts.forEach(idx=> {\n        ansArr.push(answers[idx])\n      })\n      dispatch(generateQuestion({question, answers: ansArr}))\n    } catch(error){\n        console.log(\"Error formatting questions\", error);\n    }\n  }\n}\n\nexport const nextQuestion = (qNum) => {\n  return (dispatch) => {\n    dispatch(getNext(qNum))\n  }\n}\n\n/*{\n  queston: q,\n  answers: [in randomized order]\n\n}*/\n\n\n//Reducer\nexport default function questionsReducer(state=initialState, action){\n  switch(action.type){\n    case GET_QUESTIONS:\n      return {...state, Questions: action.questions, QIdx: action.questions[0]}\n    case GENERATE_QUESTION:\n      return {...state, CurQ: action.question}\n    case NEXT_QUESTION:\n      let nextIndex = state.Questions[action.qNum+1];\n      return {...state, QNum: action.qNum+1, QIdx:nextIndex}\n    default:\n      return state;\n  }\n}\n","//Game statistics\nimport QandA from \"../Apprentice_TandemFor400_Data.json\"\n//Actions\nconst ACTIVATE_GAME = \"ACTIVATE_GAME\";\nconst CHANGE_PHASE = \"CHANGE_PHASE\";\nconst CHECK_ANSWER = \"CHECK_ANSWER\";\n\n//Action Creator\nconst startGame = (name) => {\n  return {\n    type: ACTIVATE_GAME,\n    name\n  }\n}\n\nconst changePhase = (phase) => {\n  return {\n    type: CHANGE_PHASE,\n    phase\n  }\n}\n\nconst checkSubmission = (QNum, correct, answer, score) => {\n  return {\n    type: CHECK_ANSWER,\n    QNum,\n    correct,\n    answer,\n    score,\n  }\n}\n\n\n\n//Thunk Creator\nexport const activateGame = (name) => {\n  return (dispatch) => {\n    dispatch(startGame(name))\n  }\n}\n\nexport const nextPhase = (phase) => {\n  return (dispatch) => {\n    dispatch(changePhase(phase))\n  }\n}\n\nexport const checkAnswer = (QNum, QIdx, answer) => {\n  return (dispatch) => {\n    let {correct} = QandA[QIdx];\n    let score = 0;\n    if(correct===answer){\n      score++;\n    }\n    dispatch(checkSubmission(QNum, correct, answer, score ))\n  }\n}\n\n/*\nState = {\n  score: 0,\n  playerName: \"\",\n  gamePhase: start|questions|results,\n  answerSheet: {\n    QNum: {answer:, correct: }\n  }\n}\n*/\n\n\nexport default function gameStatsReducer(state = {score:0, playerName:\"\", phase: \"start\", answerSheet:{}}, action){\n  switch(action.type){\n    case ACTIVATE_GAME:\n      let newName = action.name ? action.name : state.name;\n      return {...state, score:0, phase: \"questions\", playerName: newName}\n    case CHANGE_PHASE:\n      return {...state, phase: action.phase};\n    case CHECK_ANSWER:\n      let newSubmission = {correct: action.correct, myAnswer: action.answer}\n      let update = {...state.answerSheet, [action.QNum+1]: newSubmission}\n      return {...state, answerSheet: update, score: state.score+action.score}\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {pickQuestions} from \"../Store/questionsReducer\";\nimport {activateGame} from \"../Store/gameStatsReducer\";\n\nclass Start extends React.Component{\n  constructor(){\n    super()\n    this.state = {\n      nameInput: \"\",\n      disabled: true,\n    }\n    this.inputVal = React.createRef();\n    this.toggleButton = this.toggleButton.bind(this);\n    this.startGame = this.startGame.bind(this);\n  }\n  //Note for later: may not need to put nameInput in state\n  toggleButton(){\n    let input = this.inputVal.current.value;\n    let btnState = input.trim().length? false: true;\n    this.setState({nameInput: this.inputVal, disabled: btnState})\n  }\n  startGame(){\n    try{\n      this.props.fetchQuestions();\n      this.props.beginGame(this.inputVal.current.value);\n\n    }catch(error){\n      console.log(\"Error starting game:\", error)\n    }\n  }\n\n  render(){\n  return(\n    <div className=\"start\">\n      <div>Welcome to Trivi-I-Know</div>\n      <div>Score board would go here</div>\n      <div className=\"playerInput\">\n      <label htmlFor=\"name\">Player Name: </label>\n      <input name=\"name\" type=\"text\" placeholder=\"Please enter your name\" ref={this.inputVal} onChange={this.toggleButton}/>\n      <button type=\"button\" disabled={this.state.disabled} onClick={this.startGame}>Start Game</button>\n      </div>\n     </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchQuestions: () => dispatch(pickQuestions()),\n    beginGame: (name) => dispatch(activateGame(name))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Start);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {formatQuestion, nextQuestion} from \"../Store/questionsReducer\";\nimport {checkAnswer} from \"../Store/gameStatsReducer\";\n\nclass Question extends React.Component{\n  constructor(){\n    super()\n      this.state={\n        choice: \"\",\n        submitted: false,\n      }\n\n      this.onChange = this.onChange.bind(this);\n      this.submitAnswer = this.submitAnswer.bind(this);\n      this.nextQ = this.nextQ.bind(this);\n  }\n\n async componentDidMount(){\n   try{\n     await this.props.getQ(this.props.QIdx)\n   } catch(error){\n     console.log(\"Error getting question\", error)\n   }\n  }\n\n  onChange(e){\n    this.setState({choice: e.target.value})\n  }\n\n  submitAnswer(e){\n    e.preventDefault();\n    this.props.check(this.props.QNum, this.props.QIdx,this.state.choice)\n    this.setState({submitted: true})\n    console.log(\"Submission value\", this.state.choice);\n  }\n\n  async nextQ(){\n    try{\n      await this.props.nextQuest(this.props.QNum);\n      await this.props.getQ(this.props.QIdx);\n      this.setState({choice: \"\", submitted: false})\n    } catch(error){\n      console.log(\"Error getting to next question\", error)\n    }\n  }\n\n  render(){\n    console.log(\"PROPS\",this.props)\n    if(!this.props.curQuestion){\n      return(\n        <div className=\"question\">\n        <h2 className=\"loading\">Loading...</h2>\n      </div>\n      )\n    }\n    let {question, answers} = this.props.curQuestion;\n    let {correct, myAnswer} = (this.props.gameStats.answerSheet[this.props.QNum+1])? this.props.gameStats.answerSheet[this.props.QNum+1]: {};\n  return(\n    <div className=\"question\">\n      <div className=\"topBanner\">\n        <div>Question {this.props.QNum+1}/10</div>\n        <div>{this.props.gameStats.name||\"\"}</div>\n        <div className=\"navQuestions\">\n          <button>Previous</button>\n          <button onClick={this.nextQ} disabled={!this.state.submitted}>Next</button>\n        </div>\n      </div>\n\n      <form className=\"playerInput\" onSubmit={this.submitAnswer}>\n        <h3 className=\"questionHeader\">{question||\"Question\"}</h3>\n        <div className=\"mappedAnswers\">\n          {this.props.curQuestion.answers?(\n            answers.map((ans, idx)=> {\n            return(\n                <div className=\"answer\" key={`ans_${idx}`}>\n                  <input name=\"answer\" type=\"radio\" id={ans} value={ans} onChange={this.onChange} checked={this.state.choice===ans}/>\n                  <label htmlFor={ans}>{ans}</label>\n                </div>\n            )\n          }))\n          :(<div className=\"answer\">Loading</div>)}\n          </div>\n          <button type=\"submit\" disabled={!this.state.choice.length||(this.state.submitted)}>Submit</button>\n      </form>\n      <div className=\"answerCompare\">\n        {(correct?(\n          <div>\n          {correct===myAnswer? `Congrats, ${correct} is correct!`: `Sorry, ${myAnswer} is wrong! The correct answer is ${correct}.`}\n          </div>):\n          \"\")}\n      </div>\n\n    </div>\n  )\n  }\n}\n\nconst mapStateToState = (state) => {\n  return {\n    curQuestion: state.questions.CurQ,\n    QNum: state.questions.QNum,\n    QIdx: state.questions.QIdx,\n    gameStats: state.gameStats\n\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getQ: (num) => dispatch(formatQuestion(num)),\n    check: (QNum, QIdx, answer) => dispatch(checkAnswer(QNum, QIdx, answer)),\n    nextQuest: (qNum) => dispatch(nextQuestion(qNum))\n  }\n}\n\nexport default connect(mapStateToState, mapDispatchToProps)(Question);\n","import React from \"react\";\n\nfunction Results() {\n  return(\n    <div className=\"results\">\n      <h2>Congratulations [player name]!</h2>\n      <h3>Your score is: x/10</h3>\n\n      <div className=\"resultBtns\">\n        <button>Return to Start</button>\n        <button>Restart game</button>\n      </div>\n\n    </div>\n  )\n}\n\nexport default Results;\n","import './App.css';\nimport React from \"react\";\nimport Start from \"./Components/Start\";\nimport Question from \"./Components/Question\";\nimport Results from \"./Components/Results\";\nimport {connect} from \"react-redux\";\n\nclass App extends React.Component {\n  render(){\n    let {phase} = this.props ? this.props.gameStats: null;\n\n    if(!this.props.gameStats.phase){\n      return(\n        <div className=\"App\">\n        <h2 className=\"loading\">Loading...</h2>\n      </div>\n    )\n  }\n  else {\n    return (\n      <div className=\"App\">\n      <h1 id=\"gameName\">Trivi-I-Know</h1>\n      {phase===\"start\"? (<Start/>):(phase===\"questions\"?(<Question/>):(<Results/>))}\n      </div>\n      );\n    }\n  }\n}\n\nconst mapStatetoProps = (state) => {\n  return{\n    questions: state.questions,\n    gameStats: state.gameStats,\n  }\n}\n\nexport default connect(mapStatetoProps)(App);\n","//Store\nimport {createStore, combineReducers, applyMiddleware} from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport questions from \"./questionsReducer\"\nimport gameStats from \"./gameStatsReducer\"\n\nconst reducer = combineReducers({\n  questions,\n  gameStats,\n});\n\nconst middleware = composeWithDevTools(\n  applyMiddleware(thunkMiddleware, createLogger({collapsed: true}))\n)\n\nconst store = createStore(reducer, middleware);\nexport default store;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./Store\"\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}